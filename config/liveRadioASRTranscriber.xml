<?xml version="1.0" encoding="UTF-8" ?>

<!--    Sphinx-4 Configuration file--> 

<config>
	<property name="recognizer" value="freeSpeechRecognizer"/>
	<property name="frontend" value="liveStreamFrontEnd"/>
	<property name="logLevel" value="INFO"/>


<!--#######################-->
<!-- RECOGNIZERS           -->
<!--#######################-->
	<component name="freeSpeechRecognizer" type="edu.cmu.sphinx.recognizer.Recognizer">
	<!--	<propertylist name="monitors">
			<item>accuracyTracker</item>
			<item>speedTracker</item>
			<item>memoryTracker</item>
			<item>recognizerMonitor</item>
			<item>beamFinder</item>
		</propertylist>-->
		<property name="decoder" value="decoder"/>
	</component>
		<component name="decoder" type="edu.cmu.sphinx.decoder.Decoder">
			<property name="searchManager" value="wordPruningSearchManager"/>
		</component>

	<component name="FSGRecognizer" type="edu.cmu.sphinx.recognizer.Recognizer">
		<property name="decoder" value="FSGDecoder"/>
		<propertylist name="monitors">
			<item>FSGSpeedTracker</item>
		</propertylist>
	</component>
		<component name="FSGDecoder" type="edu.cmu.sphinx.decoder.Decoder">
			<property name="searchManager" value="FSGSearchManager"/>
		</component>
<!-- UNUSED -->
	<component name="EnglishFSGRecognizer" type="edu.cmu.sphinx.recognizer.Recognizer">
		<property name="decoder" value="EnglishFSGDecoder"/>
		<propertylist name="monitors">
			<item>EnglishFSGSpeedTracker</item>
		</propertylist>
	</component>
		<component name="EnglishFSGDecoder" type="edu.cmu.sphinx.decoder.Decoder">
			<property name="searchManager" value="EnglishFSGSearchManager"/>
		</component>


<!--#######################-->
<!-- SEARCH MANAGERS 	   -->
<!--#######################-->
	<component name="wordPruningSearchManager" type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
		<property name="growSkipInterval" value="8"/>
		<property name="acousticLookaheadFrames" value="2.0"/>
		<property name="pruner" value="trivialPruner"/>								<!-- shared component -->
		<property name="linguist" value="lexTreeLinguist"/>
		<property name="buildWordLattice" value="false"/>
		<property name="relativeBeamWidth" value="1E-60"/>
		<property name="keepAllTokens" value="true"/>
		<property name="activeListManager" value="activeListManager"/>
		<property name="scorer" value="threadedScorer"/>							<!-- shared component -->
		<property name="checkStateOrder" value="false"/>
		<property name="logMath" value="logMath"/>								<!-- shared component -->
	</component>

		<component name="lexTreeLinguist" type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
			<property name="wantUnigramSmear" value="true"/>
			<property name="unitManager" value="unitManager"/>						<!-- shared component -->
			<property name="generateUnitStates" value="false"/>
			<property name="dictionary" value="dictionary"/>						<!-- shared component -->
			<property name="wordInsertionProbability" value="0.2"/>
			<property name="languageWeight" value="11"/>
			<property name="acousticModel" value="multiSpeakerAcousticModel"/>
			<property name="fillerInsertionProbability" value=".02"/>
			<property name="languageModel" value="trigramModel"/>
			<property name="silenceInsertionProbability" value="0.1"/>
			<property name="logMath" value="logMath"/>							<!-- shared component -->
			<property name="addFillerWords" value="true"/>
			<property name="unigramSmearWeight" value="1"/>
			<property name="cacheSize" value="0"/>
		</component>

			<component name="trigramModel" type="edu.cmu.sphinx.linguist.language.ngram.large.LargeTrigramModel">
				<property name="location" value="./models/language/europarl9amHotnews.10k.augmented.3GramLM.sorted.dmp"/>
				<property name="dictionary" value="dictionary"/>					<!-- shared component -->
				<property name="unigramWeight" value=".5"/>
				<property name="maxDepth" value="3"/>
				<property name="logMath" value="logMath"/>						<!-- shared component -->
			</component>

		<component name="activeListManager" type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
			<propertylist name="activeListFactories">
				<item>unitExitActiveList</item>
				<item>wordActiveList</item>
				<item>wordActiveList</item>
				<item>activeList</item>
				<item>activeList</item>
				<item>activeList</item>
			</propertylist>
		</component>

			<component name="unitExitActiveList" type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
				<property name="relativeBeamWidth" value="1E-60"/>
				<property name="logMath" value="logMath"/>
				<property name="absoluteBeamWidth" value="-1"/>
			</component>
			<component name="wordActiveList" type="edu.cmu.sphinx.decoder.search.WordActiveListFactory">
				<property name="relativeBeamWidth" value="1E-25"/>
				<property name="logMath" value="logMath"/>
				<property name="absoluteBeamWidth" value="21"/>
			</component>
			<component name="activeList" type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
				<property name="relativeBeamWidth" value="1E-60"/>
				<property name="logMath" value="logMath"/>
				<property name="absoluteBeamWidth" value="25000"/>
			</component>



<!-- ********** The Romanian FSG Recognizer's Search Manager components ********** -->
	<component name="FSGSearchManager" type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
		<property name="logMath" value="logMath"/> 								<!-- shared component -->
		<property name="linguist" value="flatLinguist"/>
		<property name="pruner" value="trivialPruner"/> 							<!-- shared component -->
		<property name="scorer" value="threadedScorer"/> 							<!-- shared component -->
		<property name="activeListFactory" value="activeListFactory"/>
	</component>

		<component name="activeListFactory" type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
			<property name="logMath" value="logMath"/>
			<property name="absoluteBeamWidth" value="-1"/>
			<property name="relativeBeamWidth" value="1E-70"/>
		</component>
    
		<component name="flatLinguist" type="edu.cmu.sphinx.linguist.flat.FlatLinguist">
			<property name="logMath" value="logMath"/> 							<!-- shared component -->
			<property name="grammar" value="romanianFSG"/>
			<property name="acousticModel" value="multiSpeakerAcousticModel"/> 				<!-- shared component -->
			<property name="wordInsertionProbability" value="1E-10"/>
			<property name="languageWeight" value="2"/>
			<property name="unitManager" value="unitManager"/> 						<!-- shared component -->
			<!-- ADDED these 4 properties for detecting and ignoring out-of-grammar utterances -->
			<property name="addOutOfGrammarBranch" value="true"/>
			<property name="outOfGrammarProbability" value="1E-10"/>
			<property name="phoneInsertionProbability" value="1E-10"/>
			<property name="phoneLoopAcousticModel" value="multiSpeakerAcousticModel"/>
		</component>
        
		<component name="romanianFSG" type="edu.cmu.sphinx.jsgf.JSGFGrammar">
			<property name="dictionary" value="dictionary"/> 						<!-- shared component -->
			<property name="grammarLocation" value="./models/grammar/"/>
			<property name="grammarName" value="surnames"/>
			<property name="logMath" value="logMath"/>                                                      <!-- shared component -->
                        <property name="addSilenceWords" value="true"/>
			<property name="addFillerWords" value="true"/>
		</component>
<!-- UNUSED -->    
<!-- ********** The English FSG Recognizer's Search Manager components ********** -->
	<component name="EnglishFSGSearchManager" type="edu.cmu.sphinx.decoder.search.SimpleBreadthFirstSearchManager">
		<property name="logMath" value="logMath"/> 								<!-- shared component -->
		<property name="linguist" value="englishFlatLinguist"/>
		<property name="pruner" value="trivialPruner"/> 							<!-- shared component -->
		<property name="scorer" value="threadedScorer"/> 							<!-- shared component -->
		<property name="activeListFactory" value="activeListFactory"/>
	</component>

		<component name="englishFlatLinguist" type="edu.cmu.sphinx.linguist.flat.FlatLinguist">
			<property name="logMath" value="logMath"/> 							<!-- shared component -->
			<property name="grammar" value="englishFSG"/>
			<property name="acousticModel" value="englishHub4AcousticModel"/> 				<!-- shared component -->
			<property name="wordInsertionProbability" value="1E-10"/>
			<property name="languageWeight" value="2"/>
			<property name="unitManager" value="unitManager"/> 						<!-- shared component -->
			<!-- ADDED these 4 properties for detecting and ignoring out-of-grammar utterances -->
			<property name="addOutOfGrammarBranch" value="true"/>
			<property name="outOfGrammarProbability" value="1E-10"/>
			<property name="phoneInsertionProbability" value="1E-10"/>
			<property name="phoneLoopAcousticModel" value="englishHub4AcousticModel"/>
		</component>
        
		<component name="englishFSG" type="edu.cmu.sphinx.jsgf.JSGFGrammar">
			<property name="dictionary" value="englishDictionary"/> 						<!-- shared component -->
			<property name="grammarLocation" value="./models/grammar/"/>
			<property name="grammarName" value="englishCountries"/>
			<property name="logMath" value="logMath"/>                                                      <!-- shared component -->
                        <property name="addSilenceWords" value="true"/>
			<property name="addFillerWords" value="true"/>
		</component>
    
<!--#######################-->
<!-- SHARED COMPONENTS     -->
<!--#######################-->

	<component name="englishHub4AcousticModel" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel">
		<property name="unitManager" value="unitManager"/>
		<property name="loader" value="englishSphinx3Loader"/>
	</component>

		<component name="englishSphinx3Loader" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
			<property name="unitManager" value="unitManager"/>
			<property name="location" value="./models/acoustic/hub4opensrc.cd_continuous_8gau"/>
			<property name="logMath" value="logMath"/>
		</component>

	<component name="englishDictionary" type="edu.cmu.sphinx.linguist.dictionary.FastDictionary">
		<property name="unitManager" value="unitManager"/>
		<property name="dictionaryPath" value="./models/phonetic/cmudict.hub4.06d.dict"/>
		<property name="fillerPath" value="./models/phonetic/fillerDictionary.dic"/>
		<property name="addSilEndingPronunciation" value="false"/>
		<property name="allowMissingWords" value="false"/>
	</component>
        
	<component name="multiSpeakerAcousticModel" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel">
		<property name="unitManager" value="unitManager"/>
		<property name="loader" value="sphinx3Loader"/>
	</component>

		<component name="sphinx3Loader" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
			<property name="unitManager" value="unitManager"/>
			<property name="location" value="./models/acoustic/mixModels_2KS.cd_cont_2000_64"/>
			<property name="logMath" value="logMath"/>
		</component>

	<component name="dictionary" type="edu.cmu.sphinx.linguist.dictionary.FastDictionary">
		<property name="unitManager" value="unitManager"/>
		<property name="dictionaryPath" value="./models/phonetic/europarl9amHotnews10k.augmented.dic.full.plus.romanianCities.dic.plus.dates.dic.plus.names.dic.plus.numbers.dic"/>
		<property name="fillerPath" value="./models/phonetic/fillerDictionary.dic"/>
		<property name="addSilEndingPronunciation" value="false"/>
		<property name="allowMissingWords" value="false"/>
	</component>

	<component name="trivialPruner" type="edu.cmu.sphinx.decoder.pruner.SimplePruner">
	</component>

	<component name="threadedScorer" type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
		<property name="frontend" value="${frontend}"/>
	</component>

	<!-- UNUSED --> <!-- USED SINCE 12.06.01 -->
	<component name="confidenceScorer" type="edu.cmu.sphinx.result.MAPConfidenceScorer">
	</component>

	<component name="unitManager" type="edu.cmu.sphinx.linguist.acoustic.UnitManager">
	</component>

	<component name="logMath" type="edu.cmu.sphinx.util.LogMath">
		<property name="useAddTable" value="true"/>
		<property name="logBase" value="1.0001"/>
	</component>


<!--#######################-->
<!-- MONITORS              -->
<!--#######################-->
	<component name="accuracyTracker" type="edu.cmu.sphinx.instrumentation.BestPathAccuracyTracker">
		<property name="recognizer" value="${recognizer}"/>
		<property name="showAlignedResults" value="false"/>
		<property name="showRawResults" value="false"/>
	</component>
	<component name="memoryTracker" type="edu.cmu.sphinx.instrumentation.MemoryTracker">
		<property name="recognizer" value="${recognizer}"/>
	</component>
	<component name="speedTracker" type="edu.cmu.sphinx.instrumentation.SpeedTracker">
		<property name="recognizer" value="${recognizer}"/>
		<property name="showTimers" value="false"/>
		<property name="frontend" value="${frontend}"/>
	</component>
	<component name="recognizerMonitor" type="edu.cmu.sphinx.instrumentation.RecognizerMonitor">
		<property name="recognizer" value="${recognizer}"/>
		<propertylist name="allocatedMonitors">
			<item>configMonitor</item>
		</propertylist>
	</component>
	<component name="configMonitor" type="edu.cmu.sphinx.instrumentation.ConfigMonitor">
		<property name="showConfig" value="false"/>
		<property name="saveConfigAsXML" value="false"/>
	</component>
	<component name="beamFinder" type="edu.cmu.sphinx.instrumentation.BeamFinder">
		<property name="recognizer" value="${recognizer}"/>
		<property name="showSummary" value="true"/>
		<property name="showDetails" value="true"/>
		<property name="enable" value="false"/>
		<property name="logMath" value="logMath"/>
	</component>
	<component name="FSGSpeedTracker" type="edu.cmu.sphinx.instrumentation.SpeedTracker">
		<property name="recognizer" value="FSGRecognizer"/>
		<property name="showTimers" value="false"/>
		<property name="frontend" value="${frontend}"/>
	</component>
	<component name="EnglishFSGSpeedTracker" type="edu.cmu.sphinx.instrumentation.SpeedTracker">
		<property name="recognizer" value="EnglishFSGRecognizer"/>
		<property name="showTimers" value="false"/>
		<property name="frontend" value="${frontend}"/>
	</component>
        
<!--#######################-->
<!-- FRONT ENDS            -->
<!--#######################-->
	<component name="liveStreamFrontEnd" type="edu.cmu.sphinx.frontend.FrontEnd">
		<propertylist name="pipeline">
			<item>liveStreamDataSource  </item>
                        <item>dataBlocker </item>
                         <item>speechClassifier </item>
                        <item>speechMarker </item>
                        <item>wavWriter</item>
                        <item>preemphasizer</item>
			<item>windower</item>
			<item>fft</item>
			<item>melFilterBank</item>
			<item>dct</item>
			<!--<item>liveCMN</item>-->
			<item>batchCMN</item>
			<item>featureExtraction</item>
                <!--        <item>dataBlocker </item>
                        <item>speechClassifier </item>
                        <item>speechMarker </item>
                        <item>wavWriter</item>
                        <item>preemphasizer</item>
			<item>windower</item>
			<item>fft</item>
			<item>melFilterBank</item>
			<item>dct</item>
			<item>speakerDiarizationSpeechMarker</item>
                        <item>nonSpeechDataFilter</item>
			<item>batchCMN</item>
			<item>featureExtraction</item> -->
		</propertylist>
	</component>
       
                <component name="speakerDiarizationSpeechMarker" type="org.etti.sphinx.frontend.util.SpeakerDiarizationSpeechMarker">
		</component>
              
                <component name = "wavWriter" type="org.etti.sphinx.frontend.util.EnhancedWavWriter">
                    <property name = "outFilePattern" value="seg000000"/>
                    <property name = "isCompletePath" value="false"/>
                    <property name = "bitsPerSample"  value="16"/>
                    <property name = "signedData" value="true"/>
                    <property name = "captureUtterances" value="false"/>
                    <property name = "wavDimensionInSeconds" value="30"/>
                </component>
                
                
        <component name="audioFileFrontEnd" type="edu.cmu.sphinx.frontend.FrontEnd">
		<propertylist name="pipeline">
			<item>audioFileDataSource</item>
			<item>preemphasizer</item>
			<item>windower</item>
			<item>fft</item>
			<item>melFilterBank</item>
			<item>dct</item>
			<!--<item>liveCMN</item>-->
			<item>batchCMN</item>
			<item>featureExtraction</item>
		</propertylist>
	</component>
       
        <component name="liveStreamDataSource" type="org.etti.sphinx.frontend.util.LiveStreamDataSource">
                    <property name="bytesPerRead" value="3200"/>
		</component>
        	<component name="audioFileDataSource" type="edu.cmu.sphinx.frontend.util.AudioFileDataSource">
		</component>
		
		<component name="preemphasizer" type="edu.cmu.sphinx.frontend.filter.Preemphasizer">
		</component>
		<component name="windower" type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower">
		</component>
		<component name="fft" type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform">
		</component>
		<component name="melFilterBank" type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
		</component>
		<component name="dct" type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform">
		</component>
		<component name="liveCMN" type="edu.cmu.sphinx.frontend.feature.LiveCMN">
		</component>
		<component name="featureExtraction" type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor">
		</component>

<!--	 UNUSED --> 
		<component name="batchCMN" type="edu.cmu.sphinx.frontend.feature.BatchCMN">
		</component>
		<component name="streamDataSource" type="edu.cmu.sphinx.frontend.util.StreamDataSource">
			<property name="bigEndianData" value="false"/>
		</component>
		<component name="speechMarker" type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker">
		</component>
		<component name="speechClassifier" type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier">
		</component>
		<component name="nonSpeechDataFilter" type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter">
		</component>
		<component name="dataBlocker" type="edu.cmu.sphinx.frontend.DataBlocker">
		</component>
		

</config>
