<?xml version="1.0" encoding="UTF-8" ?>

<!--    Sphinx-4 Configuration file--> 

<config>
    <property name="recognizer" value="updatedRomanianNewsTranscriber"/>
    <property name="frontend" value="autoConfigurableAudioStreamFrontEnd"/>
    <property name="logLevel" value="INFO"/>
        
    <property name="acousticModelLocation" value="./models/acoustic/AM002.cd_cont_4000_64"/>
    <property name="languageModelLocation" value="./models/language/talkshows.train.09.plus.europarl9amHotnews.01.64k.3GramLM.sorted.dmp"/>
    <property name="phoneticModelLocation" value="./models/phonetic/talkshows.train.plus.europarl9amHotnews.dic.full"/>


    <!--#######################-->
    <!-- RECOGNIZERS           -->
    <!--#######################-->
    <component name="updatedRomanianNewsTranscriber" type="edu.cmu.sphinx.recognizer.Recognizer">
        <propertylist name="monitors">
            <item>accuracyTracker</item>
            <item>speedTracker</item>
            <item>memoryTracker</item>
            <item>recognizerMonitor</item>
            <item>beamFinder</item>
        </propertylist>
        <property name="decoder" value="decoder"/>
    </component>
    <component name="decoder" type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="wordPruningSearchManager"/>
    </component>

    <!--#######################-->
    <!-- SEARCH MANAGERS 	   -->
    <!--#######################-->
    <component name="wordPruningSearchManager" type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
        <property name="growSkipInterval" value="8"/>
        <property name="acousticLookaheadFrames" value="2.0"/>
        <property name="pruner" value="trivialPruner"/>								<!-- shared component -->
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="buildWordLattice" value="false"/>
        <property name="relativeBeamWidth" value="1E-60"/>
        <property name="keepAllTokens" value="true"/>
        <property name="activeListManager" value="activeListManager"/>
        <property name="scorer" value="threadedScorer"/>							<!-- shared component -->
        <property name="checkStateOrder" value="false"/>
        <property name="logMath" value="logMath"/>								<!-- shared component -->
    </component>

    <component name="lexTreeLinguist" type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="wantUnigramSmear" value="true"/>
        <property name="unitManager" value="unitManager"/>						<!-- shared component -->
        <property name="generateUnitStates" value="false"/>
        <property name="dictionary" value="dictionary"/>						<!-- shared component -->
        <property name="wordInsertionProbability" value="0.2"/>
        <property name="languageWeight" value="11"/>
        <property name="acousticModel" value="multiSpeakerAcousticModel"/>
        <property name="fillerInsertionProbability" value=".02"/>
        <property name="languageModel" value="trigramModel"/>
        <property name="silenceInsertionProbability" value="0.1"/>
        <property name="logMath" value="logMath"/>							<!-- shared component -->
        <property name="addFillerWords" value="true"/>
        <property name="unigramSmearWeight" value="1"/>
        <property name="cacheSize" value="0"/>
    </component>

    <component name="trigramModel" type="edu.cmu.sphinx.linguist.language.ngram.large.LargeTrigramModel">
        <property name="location" value="${languageModelLocation}"/>
        <property name="dictionary" value="dictionary"/>					<!-- shared component -->
        <property name="unigramWeight" value=".5"/>
        <property name="maxDepth" value="3"/>
        <property name="logMath" value="logMath"/>						<!-- shared component -->
    </component>

    <component name="activeListManager" type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
        <propertylist name="activeListFactories">
            <item>unitExitActiveList</item>
            <item>wordActiveList</item>
            <item>wordActiveList</item>
            <item>activeList</item>
            <item>activeList</item>
            <item>activeList</item>
        </propertylist>
    </component>

    <component name="unitExitActiveList" type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
        <property name="relativeBeamWidth" value="1E-60"/>
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="-1"/>
    </component>
    <component name="wordActiveList" type="edu.cmu.sphinx.decoder.search.WordActiveListFactory">
        <property name="relativeBeamWidth" value="1E-25"/>
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="21"/>
    </component>
    <component name="activeList" type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
        <property name="relativeBeamWidth" value="1E-60"/>
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="25000"/>
    </component>



    <component name="multiSpeakerAcousticModel" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.TiedStateAcousticModel">
        <property name="unitManager" value="unitManager"/>
        <property name="loader" value="sphinx3Loader"/>
        <property name="location" value="${acousticModelLocation}"/>
    </component>

    <component name="sphinx3Loader" type="edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader">
        <property name="unitManager" value="unitManager"/>
        <property name="location" value="${acousticModelLocation}"/>
        <property name="logMath" value="logMath"/>
    </component>

    <component name="dictionary" type="edu.cmu.sphinx.linguist.dictionary.FastDictionary">
        <property name="unitManager" value="unitManager"/>
        <property name="dictionaryPath" value="${phoneticModelLocation}"/>
        <property name="fillerPath" value="./models/phonetic/fillerDictionary.dic"/>
        <property name="addSilEndingPronunciation" value="false"/>
        <property name="allowMissingWords" value="false"/>
    </component>

    <component name="trivialPruner" type="edu.cmu.sphinx.decoder.pruner.SimplePruner">
    </component>

    <component name="threadedScorer" type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="${frontend}"/>
    </component>

    <!-- UNUSED --> <!-- USED SINCE 12.06.01 -->
    <component name="confidenceScorer" type="edu.cmu.sphinx.result.MAPConfidenceScorer">
    </component>

    <component name="unitManager" type="edu.cmu.sphinx.linguist.acoustic.UnitManager">
    </component>

    <component name="logMath" type="edu.cmu.sphinx.util.LogMath">
        <property name="useAddTable" value="true"/>
        <property name="logBase" value="1.0001"/>
    </component>


    <!--#######################-->
    <!-- MONITORS              -->
    <!--#######################-->
    <component name="accuracyTracker" type="edu.cmu.sphinx.instrumentation.BestPathAccuracyTracker">
        <property name="recognizer" value="${recognizer}"/>
        <property name="showAlignedResults" value="false"/>
        <property name="showRawResults" value="false"/>
    </component>
    <component name="memoryTracker" type="edu.cmu.sphinx.instrumentation.MemoryTracker">
        <property name="recognizer" value="${recognizer}"/>
    </component>
    <component name="speedTracker" type="edu.cmu.sphinx.instrumentation.SpeedTracker">
        <property name="recognizer" value="${recognizer}"/>
        <property name="showTimers" value="false"/>
        <property name="frontend" value="${frontend}"/>
    </component>
    <component name="recognizerMonitor" type="edu.cmu.sphinx.instrumentation.RecognizerMonitor">
        <property name="recognizer" value="${recognizer}"/>
        <propertylist name="allocatedMonitors">
            <item>configMonitor</item>
        </propertylist>
    </component>
    <component name="configMonitor" type="edu.cmu.sphinx.instrumentation.ConfigMonitor">
        <property name="showConfig" value="false"/>
        <property name="saveConfigAsXML" value="false"/>
    </component>
    <component name="beamFinder" type="edu.cmu.sphinx.instrumentation.BeamFinder">
        <property name="recognizer" value="${recognizer}"/>
        <property name="showSummary" value="true"/>
        <property name="showDetails" value="true"/>
        <property name="enable" value="false"/>
        <property name="logMath" value="logMath"/>
    </component>

    <!--#######################-->
    <!-- FRONT ENDS            -->
    <!--#######################-->
    <component name="autoConfigurableAudioStreamFrontEnd" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">
            <item>audioStreamDataSource </item>
            <item>preemphasizer </item>
            <item>windower </item>
            <item>fft </item>
            <item>autoConfigurableCepstrum </item>
            <item>featureExtraction </item>
        </propertylist>
    </component>
    
    <component name="autoConfigurableCepstrum" type="edu.cmu.sphinx.frontend.cepstrum.Cepstrum">
        <property name="targetAcousticModel" value="multiSpeakerAcousticModel"/>
        <property name="recognitionType" value="batch" /> <!-- can be live/batch -->
        <property name="enableVoiceActivityDetection" value="false"/> <!-- can be true/false -->
    </component>

    <component name="audioStreamDataSource" type="org.etti.sphinx.frontend.util.AudioStreamDataSource">
    </component>
    <component name="preemphasizer" type="edu.cmu.sphinx.frontend.filter.Preemphasizer">
    </component>
    <component name="windower" type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower">
    </component>
    <component name="fft" type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform">
    </component>
    <component name="featureExtraction" type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor">
    </component>
</config>
